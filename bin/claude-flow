#!/bin/sh
# Claude-Flow Smart Dispatcher - Detects and uses the best available runtime

VERSION="2.0.0-enhanced"
SCRIPT_DIR=$(dirname "$0")
ROOT_DIR=$(cd "$SCRIPT_DIR/.." && pwd)

# Quick version check
for arg in "$@"; do
  if [ "$arg" = "--version" ] || [ "$arg" = "-v" ]; then
    echo "v$VERSION"
    exit 0
  fi
done

# FORCE Deno first for achieve, sparc, swarm, and memory commands
# These commands require Deno for proper terminal handling
COMMAND="$1"

# Try multiple common Deno locations
DENO_PATH=""
if command -v deno >/dev/null 2>&1; then
  DENO_PATH="deno"
elif [ -x "/opt/homebrew/bin/deno" ]; then
  DENO_PATH="/opt/homebrew/bin/deno"
elif [ -x "/usr/local/bin/deno" ]; then
  DENO_PATH="/usr/local/bin/deno"
elif [ -x "$HOME/.deno/bin/deno" ]; then
  DENO_PATH="$HOME/.deno/bin/deno"
fi

if [ "$COMMAND" = "achieve" ] || [ "$COMMAND" = "sparc" ] || [ "$COMMAND" = "swarm" ] || [ "$COMMAND" = "memory" ]; then
  if [ -n "$DENO_PATH" ] && [ -f "$ROOT_DIR/src/cli/main-deno.ts" ]; then
    exec "$DENO_PATH" run --allow-all "$ROOT_DIR/src/cli/main-deno.ts" "$@"
  else
    echo "‚ö†Ô∏è  Error: Deno is required for the '$COMMAND' command"
    echo ""
    echo "Deno was not found in common locations."
    echo "Please install Deno:"
    echo "  curl -fsSL https://deno.land/x/install/install.sh | sh"
    echo ""
    echo "Or on macOS with Homebrew:"
    echo "  brew install deno"
    echo ""
    echo "If Deno is installed, you may need to add it to your PATH."
    exit 1
  fi
fi

# Try Deno first for other commands
if [ -n "$DENO_PATH" ] && [ -f "$ROOT_DIR/src/cli/main-deno.ts" ]; then
  # Use Deno for full functionality including achieve command
  exec "$DENO_PATH" run --allow-all "$ROOT_DIR/src/cli/main-deno.ts" "$@"
fi

# Fall back to Node.js version
if [ -f "$ROOT_DIR/cli.js" ]; then
  # Use cli.js wrapper that handles achieve command
  exec node "$ROOT_DIR/cli.js" "$@"
elif command -v tsx >/dev/null 2>&1 && [ -f "$ROOT_DIR/src/cli/simple-cli.ts" ]; then
  # Use tsx for Node.js functionality
  exec tsx "$ROOT_DIR/src/cli/simple-cli.ts" "$@"
elif [ -f "$ROOT_DIR/src/cli/simple-cli.ts" ]; then
  # Try to use npx tsx as fallback
  exec npx tsx "$ROOT_DIR/src/cli/simple-cli.ts" "$@"
else
  # No runtime available, show help
  echo "üß† Claude-Flow v$VERSION - Advanced AI Agent Orchestration System"
  echo ""
  echo "‚ö†Ô∏è  No compatible runtime found."
  echo ""
  echo "For full functionality (recommended):"
  echo "  1. Install Deno: curl -fsSL https://deno.land/x/install/install.sh | sh"
  echo "  2. Run: claude-flow <command>"
  echo ""
  echo "For Node.js compatibility mode:"
  echo "  1. Install tsx: npm install -g tsx"
  echo "  2. Run: claude-flow <command>"
  echo ""
  echo "Or use npx directly:"
  echo "  npx tsx src/cli/simple-cli.ts <command>"
  echo ""
  echo "Documentation: https://github.com/ruvnet/claude-code-flow"
  exit 1
fi